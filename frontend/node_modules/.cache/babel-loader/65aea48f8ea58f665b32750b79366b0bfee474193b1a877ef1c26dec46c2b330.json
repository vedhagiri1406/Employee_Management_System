{"ast":null,"code":"// src/api/api.js\nimport axios from \"axios\";\nexport const baseURL = process.env.REACT_APP_API_BASE_URL || process.env.REACT_APP_LOCALHOST || \"http://localhost:8000\";\nconst api = axios.create({\n  baseURL\n});\n\n// Refresh de-duplication\nlet isRefreshing = false;\nlet waitQueue = [];\n\n// Attach access token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access\");\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\n// Notify queued requests\nfunction resolveQueued(newAccess) {\n  waitQueue.forEach(p => p.resolve(newAccess));\n  waitQueue = [];\n}\nfunction rejectQueued(err) {\n  waitQueue.forEach(p => p.reject(err));\n  waitQueue = [];\n}\n\n// 401 handler -> refresh -> retry\napi.interceptors.response.use(res => res, async err => {\n  var _err$response;\n  const original = err.config || {};\n  if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) !== 401 || original._retry) {\n    return Promise.reject(err);\n  }\n  original._retry = true;\n  if (isRefreshing) {\n    return new Promise((resolve, reject) => {\n      waitQueue.push({\n        resolve,\n        reject\n      });\n    }).then(token => {\n      original.headers.Authorization = `Bearer ${token}`;\n      return api(original);\n    });\n  }\n  isRefreshing = true;\n  try {\n    const refresh = localStorage.getItem(\"refresh\");\n    if (!refresh) throw new Error(\"No refresh token\");\n    const {\n      data\n    } = await axios.post(`${baseURL}/auth/refresh/`, {\n      refresh\n    });\n    if (!(data !== null && data !== void 0 && data.access)) throw new Error(\"No access token in refresh response\");\n    localStorage.setItem(\"access\", data.access);\n    if (data.refresh) localStorage.setItem(\"refresh\", data.refresh);\n    resolveQueued(data.access);\n    original.headers.Authorization = `Bearer ${data.access}`;\n    return api(original);\n  } catch (e) {\n    rejectQueued(e);\n    localStorage.removeItem(\"access\");\n    localStorage.removeItem(\"refresh\");\n    window.location.href = \"/login\";\n    return Promise.reject(e);\n  } finally {\n    isRefreshing = false;\n  }\n});\nexport default api;","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_API_BASE_URL","REACT_APP_LOCALHOST","api","create","isRefreshing","waitQueue","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","resolveQueued","newAccess","forEach","p","resolve","rejectQueued","err","reject","response","res","_err$response","original","status","_retry","Promise","push","then","refresh","Error","data","post","access","setItem","e","removeItem","window","location","href"],"sources":["D:/projects/tasks/Employee_Management_System/frontend/src/api/api.js"],"sourcesContent":["// src/api/api.js\r\nimport axios from \"axios\";\r\n\r\nexport const baseURL =\r\n  process.env.REACT_APP_API_BASE_URL ||\r\n  process.env.REACT_APP_LOCALHOST ||\r\n  \"http://localhost:8000\";\r\n\r\nconst api = axios.create({ baseURL });\r\n\r\n// Refresh de-duplication\r\nlet isRefreshing = false;\r\nlet waitQueue = [];\r\n\r\n// Attach access token\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"access\");\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\n// Notify queued requests\r\nfunction resolveQueued(newAccess) {\r\n  waitQueue.forEach((p) => p.resolve(newAccess));\r\n  waitQueue = [];\r\n}\r\nfunction rejectQueued(err) {\r\n  waitQueue.forEach((p) => p.reject(err));\r\n  waitQueue = [];\r\n}\r\n\r\n// 401 handler -> refresh -> retry\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  async (err) => {\r\n    const original = err.config || {};\r\n    if (err.response?.status !== 401 || original._retry) {\r\n      return Promise.reject(err);\r\n    }\r\n    original._retry = true;\r\n\r\n    if (isRefreshing) {\r\n      return new Promise((resolve, reject) => {\r\n        waitQueue.push({ resolve, reject });\r\n      }).then((token) => {\r\n        original.headers.Authorization = `Bearer ${token}`;\r\n        return api(original);\r\n      });\r\n    }\r\n\r\n    isRefreshing = true;\r\n    try {\r\n      const refresh = localStorage.getItem(\"refresh\");\r\n      if (!refresh) throw new Error(\"No refresh token\");\r\n\r\n      const { data } = await axios.post(`${baseURL}/auth/refresh/`, { refresh });\r\n      if (!data?.access) throw new Error(\"No access token in refresh response\");\r\n\r\n      localStorage.setItem(\"access\", data.access);\r\n      if (data.refresh) localStorage.setItem(\"refresh\", data.refresh);\r\n\r\n      resolveQueued(data.access);\r\n\r\n      original.headers.Authorization = `Bearer ${data.access}`;\r\n      return api(original);\r\n    } catch (e) {\r\n      rejectQueued(e);\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      window.location.href = \"/login\";\r\n      return Promise.reject(e);\r\n    } finally {\r\n      isRefreshing = false;\r\n    }\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}