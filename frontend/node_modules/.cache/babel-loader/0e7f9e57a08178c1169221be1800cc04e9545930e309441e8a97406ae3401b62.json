{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:8000\";\nconst api = axios.create({\n  baseURL\n});\nlet isRefreshing = false;\nlet queue = [];\n\n// attach access token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access\");\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\n// handle 401 by refreshing using refresh token\napi.interceptors.response.use(res => res, async err => {\n  var _err$response;\n  const original = err.config;\n  if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) !== 401 || original._retry) {\n    return Promise.reject(err);\n  }\n  original._retry = true;\n  if (isRefreshing) {\n    return new Promise((resolve, reject) => {\n      queue.push({\n        resolve,\n        reject\n      });\n    }).then(token => {\n      original.headers.Authorization = `Bearer ${token}`;\n      return api(original);\n    });\n  }\n  isRefreshing = true;\n  try {\n    const refresh = localStorage.getItem(\"refresh\");\n    if (!refresh) throw new Error(\"No refresh token\");\n    const {\n      data\n    } = await axios.post(`${baseURL}/auth/refresh/`, {\n      refresh\n    });\n    localStorage.setItem(\"access\", data.access);\n    queue.forEach(p => p.resolve(data.access));\n    queue = [];\n    original.headers.Authorization = `Bearer ${data.access}`;\n    return api(original);\n  } catch (e) {\n    queue.forEach(p => p.reject(e));\n    queue = [];\n    localStorage.removeItem(\"access\");\n    localStorage.removeItem(\"refresh\");\n    window.location.href = \"/login\";\n    return Promise.reject(e);\n  } finally {\n    isRefreshing = false;\n  }\n});\nexport default api;\nexport { baseURL };","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_API_BASE_URL","api","create","isRefreshing","queue","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","res","err","_err$response","original","status","_retry","Promise","reject","resolve","push","then","refresh","Error","data","post","setItem","access","forEach","p","e","removeItem","window","location","href"],"sources":["D:/projects/tasks/Employee_Management_System/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:8000\";\r\n\r\nconst api = axios.create({ baseURL });\r\n\r\nlet isRefreshing = false;\r\nlet queue = [];\r\n\r\n// attach access token\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"access\");\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\n// handle 401 by refreshing using refresh token\r\napi.interceptors.response.use(\r\n  (res) => res,\r\n  async (err) => {\r\n    const original = err.config;\r\n    if (err.response?.status !== 401 || original._retry) {\r\n      return Promise.reject(err);\r\n    }\r\n    original._retry = true;\r\n\r\n    if (isRefreshing) {\r\n      return new Promise((resolve, reject) => {\r\n        queue.push({ resolve, reject });\r\n      }).then((token) => {\r\n        original.headers.Authorization = `Bearer ${token}`;\r\n        return api(original);\r\n      });\r\n    }\r\n\r\n    isRefreshing = true;\r\n    try {\r\n      const refresh = localStorage.getItem(\"refresh\");\r\n      if (!refresh) throw new Error(\"No refresh token\");\r\n      const { data } = await axios.post(`${baseURL}/auth/refresh/`, { refresh });\r\n      localStorage.setItem(\"access\", data.access);\r\n      queue.forEach((p) => p.resolve(data.access));\r\n      queue = [];\r\n      original.headers.Authorization = `Bearer ${data.access}`;\r\n      return api(original);\r\n    } catch (e) {\r\n      queue.forEach((p) => p.reject(e));\r\n      queue = [];\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      window.location.href = \"/login\";\r\n      return Promise.reject(e);\r\n    } finally {\r\n      isRefreshing = false;\r\n    }\r\n  }\r\n);\r\n\r\nexport default api;\r\nexport { baseURL };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EAAEL;AAAQ,CAAC,CAAC;AAErC,IAAIM,YAAY,GAAG,KAAK;AACxB,IAAIC,KAAK,GAAG,EAAE;;AAEd;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAC5C,IAAIF,KAAK,EAAED,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAC3D,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACI,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BQ,GAAG,IAAKA,GAAG,EACZ,MAAOC,GAAG,IAAK;EAAA,IAAAC,aAAA;EACb,MAAMC,QAAQ,GAAGF,GAAG,CAACR,MAAM;EAC3B,IAAI,EAAAS,aAAA,GAAAD,GAAG,CAACF,QAAQ,cAAAG,aAAA,uBAAZA,aAAA,CAAcE,MAAM,MAAK,GAAG,IAAID,QAAQ,CAACE,MAAM,EAAE;IACnD,OAAOC,OAAO,CAACC,MAAM,CAACN,GAAG,CAAC;EAC5B;EACAE,QAAQ,CAACE,MAAM,GAAG,IAAI;EAEtB,IAAIjB,YAAY,EAAE;IAChB,OAAO,IAAIkB,OAAO,CAAC,CAACE,OAAO,EAAED,MAAM,KAAK;MACtClB,KAAK,CAACoB,IAAI,CAAC;QAAED,OAAO;QAAED;MAAO,CAAC,CAAC;IACjC,CAAC,CAAC,CAACG,IAAI,CAAEhB,KAAK,IAAK;MACjBS,QAAQ,CAACN,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;MAClD,OAAOR,GAAG,CAACiB,QAAQ,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAf,YAAY,GAAG,IAAI;EACnB,IAAI;IACF,MAAMuB,OAAO,GAAGhB,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAC/C,IAAI,CAACe,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;IACjD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAAC,GAAGhC,OAAO,gBAAgB,EAAE;MAAE6B;IAAQ,CAAC,CAAC;IAC1EhB,YAAY,CAACoB,OAAO,CAAC,QAAQ,EAAEF,IAAI,CAACG,MAAM,CAAC;IAC3C3B,KAAK,CAAC4B,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAACV,OAAO,CAACK,IAAI,CAACG,MAAM,CAAC,CAAC;IAC5C3B,KAAK,GAAG,EAAE;IACVc,QAAQ,CAACN,OAAO,CAACC,aAAa,GAAG,UAAUe,IAAI,CAACG,MAAM,EAAE;IACxD,OAAO9B,GAAG,CAACiB,QAAQ,CAAC;EACtB,CAAC,CAAC,OAAOgB,CAAC,EAAE;IACV9B,KAAK,CAAC4B,OAAO,CAAEC,CAAC,IAAKA,CAAC,CAACX,MAAM,CAACY,CAAC,CAAC,CAAC;IACjC9B,KAAK,GAAG,EAAE;IACVM,YAAY,CAACyB,UAAU,CAAC,QAAQ,CAAC;IACjCzB,YAAY,CAACyB,UAAU,CAAC,SAAS,CAAC;IAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B,OAAOjB,OAAO,CAACC,MAAM,CAACY,CAAC,CAAC;EAC1B,CAAC,SAAS;IACR/B,YAAY,GAAG,KAAK;EACtB;AACF,CACF,CAAC;AAED,eAAeF,GAAG;AAClB,SAASJ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}